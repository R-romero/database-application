DESC PF0064.LOC_VEICULO;

CREATE OR REPLACE
FUNCTION FUN_NOME_VEICULO(P_NR_PLACA PF0064.LOC_VEICULO.NR_PLACA%TYPE)
RETURN VARCHAR2 IS
  V_RESULTADO VARCHAR2(1000);
BEGIN
  SELECT TIPO_AUTOMOVEL || ' ' || MODELO || ' ' || COR
    INTO V_RESULTADO
      FROM PF0064.LOC_VEICULO
        WHERE UPPER(NR_PLACA) = UPPER(P_NR_PLACA);
        
  RETURN V_RESULTADO;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RAISE_APPLICATION_ERROR(-20001, 'Placa ' || P_NR_PLACA ||
    ' do veículo não está cadastrada. Favor informar um código válido!');
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20002,'Erro inesperado.' ||sqlerrm);
END;

CREATE OR REPLACE
PROCEDURE "PRC_INSERE_VEICULO"(
VNR_PLACA         LOC_VEICULO.NR_PLACA%TYPE,
VCD_PROPRIETARIO  LOC_VEICULO.CD_PROPRIETARIO%TYPE,
VSTATUS           LOC_VEICULO.STATUS%TYPE,
VCD_GRUPO          LOC_VEICULO.CD_GRUPO%TYPE)
IS
BEGIN
INSERT INTO LOC_VEICULO(NR_PLACA, CD_PROPRIETARIO, STATUS,CD_GRUPO)
VALUES(VNR_PLACA, VCD_PROPRIETARIO,VSTATUS,VCD_GRUPO);

COMMIT;
EXCEPTION
	WHEN DUP_VAL_ON_INDEX THEN
		RAISE_APPLICATION_ERROR(-20001,'Placa já existe');
	WHEN INVALID_NUMBER THEN
		RAISE_APPLICATION_ERROR(-20002,'Número Inválido');
	WHEN VALUE_ERROR THEN
		RAISE_APPLICATION_ERROR(-20003,'Valor Inválido');
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20004,'Erro Inesperado.'||sqlerrm);
END;